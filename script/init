#!/usr/bin/env ruby

require "fileutils"
require "pathname"

def replace_in_file file_name, string_or_regexp, new_string
  file_content     = File.read file_name
  new_file_content = file_content.gsub string_or_regexp, new_string
  File.open(file_name, "w") { |file| file.write new_file_content }
end

def replace_in_all_files old_string, new_string
  Dir.glob("**/*").each do |file_name|
    replace_in_file(file_name, old_string, new_string) if File.file? file_name
  end
end

app_path = Pathname.new(__FILE__).expand_path.parent.parent
Dir.chdir app_path

FileUtils.rm_rf ".git"

app_name             = app_path.basename.to_s
camel_cased_app_name = app_name.split('_').map { |e| e.capitalize }.join
underscored_app_name = camel_cased_app_name.gsub(/(.)([A-Z])/, '\1_\2').downcase

puts "Renaming the app to '#{camel_cased_app_name}'..."
replace_in_all_files "RailsBlankApp",   camel_cased_app_name
replace_in_all_files "rails_blank_app", underscored_app_name

puts "Generating Rails app secret..."
`gem install dotenv`
secret = `rake secret`.chomp
replace_in_file '.env', 'please_fill_in', secret

puts "Setting the right README.md file..."
FileUtils.mv "README_APP.md", "README.md"

puts "Creating the config/database.yml file..."
FileUtils.cp "config/database.yml.example", "config/database.yml"

puts "Removing this init script..."
FileUtils.rm "script/init"

puts "Initializing the git repository..."
`git init; git add .; git commit -m "Initial commit"`

# from http://rubypond.com/blog/slaying-dragons-git-bash-ruby
puts "Adding a git pre-commit hook..."
pre_commit_script_path = ".git/hooks/pre-commit"
pre_commit_script = %q[#!/usr/bin/env ruby
if `grep -rls ":focus" spec/` != ""
  puts "\e\[31mCommit aborted because you left a :focus statement in spec file(s)\e\[0m"
  puts `grep -rls ":focus" spec/`
  exit 1
end

if `grep -rls "debugger" app/ lib/ extra/ spec/` != ""
  puts "\e\[31mCommit aborted because you left a debugger statement in file(s)\e\[0m"
  puts `grep -rls "debugger" app/ config/ lib/ spec/`
  exit 1
end

if `egrep -rls "^<<<<<<< |^>>>>>>> |^=======$" app/ lib/ extra/ config/ db/ spec/ | xargs file | egrep 'script|text'` != ""
  puts "\e\[31mCommit aborted because you left git failed merged markup in some files\e\[0m"
  puts `egrep -rls "^<<<<<<< |^>>>>>>> |^=======$" app/ config/ db/ lib/ spec/ | xargs file | egrep 'script|text' | awk -F: '{print $1}'`
  exit 1
end
]
File.open(pre_commit_script_path, "w") { |f| f.write pre_commit_script }
File.chmod(0777, pre_commit_script_path)

consular_dir    = "#{ENV['HOME']}/.config/consular"
consular_script = consular_dir + '/rails_blank_app.term'
if File.directory? consular_dir
  if File.exists? consular_script
    puts "Creating a Consular script for the app..."
    app_consular_script = consular_dir + '/' + app_name + '.term'
    FileUtils.cp consular_script, app_consular_script
    replace_in_file app_consular_script, "rails_blank_app", app_name
  else
    puts "Create a '#{consular_script}' Consular script template to have next time this script automatically creating a Consular script for your new application."
  end
end

puts "Your application is ready :)"
